language: bash
sudo: required
dist: trusty
services:
  - docker
git:
  depth: 1
  submodules: false
branches:
  only:
  - master
env:
  global:
    # AWS_ACCESS_KEY_ID
    - secure: "tLzQThmBRF6fVU4zOSLqVry5mMM8P/zYObb4ks0qBzJf2fTsDWzivbZ0hnY4nqQDWCF/8rOKz5qdEfRhAU60uMpiI/u+5IhkbHoLU5ya+2ndeE0Qi13fZ1Sh9N82BeuVtiw+Zx4DqfXNhBQ4ElEeZCgcwIoZpPqLwfwvWlJ4FgU5ERF9d93dECBWp5F7QZUCy6MI9JYIs8FjvSeV/s4wI0tk8pu098TH5uvio7PnHwjbTyw7ZHdaWceb52NNa7oq4aZu4fnWis9ehPxLnS5CK7kxdXd3mBBQ8KZGJYqudYANsopx4rQiz+Ian8MUodDb3mEnaUKM4XeZH4OtLDEKBQ7vkgEjkZ/kvGazXvlCWHATkpt+auzVf9Gv61wNKkMVE5ma79epELfrBiNY4D1DW3vnI7xJUn6Tu1H5jb3FCQFG2hXFViJprAa91xh3zNtr5Mi05GH9qfehN6p18WadnFREgEkob7VpNEZseyKAruHZbj8MACjtz/OHsAZWhuCBtXzI1/uv6mO4tvR0rqYJ2zAuBlu5oU8pPF3rGIu7zAx/Wps/t7SqrEqz3y97MxEyeyPN6lFDNAj/TTLSXnAga9AMhQYCOqYfnrcNkl93Il3GhmbrSQgl2bFSF494H2nsl5D3BGxiG0If8NzJ4knZ1vZs5TTkdvs06864w1wCp3k="
    # AWS_SECRET_ACCESS_KEY
    - secure: "AYyVqAh0LL716Lm4xSKdmvGpwXlQ4WIPPFKoQzSFimnXodseEUhMozK3u47hdieXOJlN2VaSI6Wyq5nXI/F2PPPT0oUsogrpqCZOolOj3LzOVQ0Y6Hi7VcOrA9dAuQWtBWpSZgBdbLsZrbwr95mdNgBUlCCz86JFMmTK68AOVESXIU87QNmUMqqbz1WOLnHMI7/+fSItdgN/1HU0xQxKp/Z7Np5iiISD/9UQXfJuziFvGQu/fuZEnlaXv5pyR0y3r4ZYaKkmFkVTTP5+ukB+edeAwX44P9F9s0H02cVYu3FoU44bHcEyTH17gMj+nRULvZ9F3r916HOh5hotGsDtO4/9xp3apkNkzTDIvIikeux4j8Rl3iTnld8KFG571/N/GO8A2x5tjNB1HDVxQsTgK+PrC85xDI992bEJUyPqArYeF5T7q9ijsLUKRbrIkFXXMEhFp6WuTFgd+wW39FWgrjK5dHKB/TBgbhEUHHbUMJH4rar6ol7QsWInNU2be1Zvis+KLFAGPZLTgfJJ2YDOYCOd4/X7dk7Kzm/Zl5wTslBR2BQF9YS7QqE+BAhyOqhHqu5hGvLdKST/r+Khsa96SQ1OiAW1RPa1njpQ0M/feZ0JB3K+h2Y4pZkCUBzDMW1+owDBxOemVzLtBo5ReljBwFYasgqtJGaej3N9VlsgPrM="
    # include $HOME/.local/bin for `aws`
    - PATH=$HOME/.local/bin:$PATH
before_install:
  - docker pull node:9.3.0-alpine
  # set up awscli packages
  - pip install --user awscli
install:
  - docker run --rm --workdir /home/node/app/ --volume ${TRAVIS_BUILD_DIR}/:/home/node/app/ node:9.3.0-alpine npm install eslint
# before_script:
#   - echo "Before Script..."
script:
  - docker run --rm --workdir /home/node/app/ --volume ${TRAVIS_BUILD_DIR}/:/home/node/app/ node:9.3.0-alpine ./node_modules/.bin/eslint ./
# before_cache:
#   - echo "Before Cache..."
# after_success:
#   - echo "After Success..."
# after_failure:
#   - echo "After Failure..."
before_deploy:
  - aws s3 sync --dryrun --delete --exact-timestamps --exclude ".git*" --exclude "node_modules*" . s3://portfolio.joshbacon.name
deploy:
  provider: script
  script: aws s3 sync --delete --exact-timestamps --exclude ".git*" --exclude "node_modules*" . s3://portfolio.joshbacon.name
  # script: sh deploy.sh
  on:
    branch: master
  skip_cleanup: true
after_deploy:
  - aws cloudfront create-invalidation --distribution-id='E2DH15J9LGHZU1' --paths='/*'
# after_script:
#   - echo "After Script..."